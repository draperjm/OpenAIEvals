import json
import os

REGISTRY_PATH = os.path.join(os.path.dirname(__file__), "../evals/registry")
DATA_DIR = os.path.join(REGISTRY_PATH, "data/test_modelgraded")

unlabeled_prompts = {
    "humor": {
        "modelgraded_spec": "humor_jp",
        "prompt": "{subject}で数行の大喜利を書いて。敬語じゃなく関西弁で吉本のM1チャンピョンみたいに書いて。",
        "eval_type": "cot_classify_jp",
    },
}

subjects = {
    "animals": ["cat", "bird", "hamster"],
    "fruits": ["apple", "banana", "orange"],
    "people": ["Elon Musk", "Bill Gates", "Jeff Bezos"],
    "people_jp": ["イーロン・マスク", "ビル・ゲイツ", "ジェフ・ベゾス"],
}

# remove duplicates
subjects = {k: list(set(v)) for k, v in subjects.items()}

unlabeled_target_sets = [("humor", "people_jp")]

yaml_str = f"# This file is generated by {os.path.basename(__file__)}\n\n"
evals = []

for prompt_name, subject in unlabeled_target_sets:
    prompt = unlabeled_prompts[prompt_name]["prompt"]
    samples = [{"input": prompt.format(subject=s)} for s in subjects[subject]]
    file_name = os.path.join(DATA_DIR, f"{prompt_name}_{subject}.jsonl")
    with open(file_name, "w", encoding='utf-8') as f:
        f.write('\n'.join(json.dumps(sample, ensure_ascii=False) for sample in samples))
    print(f"wrote {len(samples)} samples to {file_name}")

    yaml_str += f"""
mg-{prompt_name}-{subject}:
  id: mg-{prompt_name}-{subject}.dev.v0
  metrics: [accuracy]
mg-{prompt_name}-{subject}.dev.v0:
  class: evals.elsuite.modelgraded.classify:ModelBasedClassify
  args:
    samples_jsonl: test_modelgraded/{prompt_name}_{subject}.jsonl
    eval_type: {unlabeled_prompts[prompt_name]['eval_type']}
    modelgraded_spec: {unlabeled_prompts[prompt_name]['modelgraded_spec']}\n\n"""

    evals.append(f"mg-{prompt_name}-{subject}: {file_name}")

yaml_file = os.path.join(REGISTRY_PATH, "evals/test-modelgraded-generated.yaml")
with open(yaml_file, "w") as f:
    f.write(yaml_str)
print(f"wrote {yaml_file}")
for e in evals:
    print(e)
